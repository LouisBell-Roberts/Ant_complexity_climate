) +
ggtitle("Both")
both_caste_trans
#########
both_means <- aggregate(PREavg_avg ~ poly_id, data = ant_data_both, FUN = mean) #0 = 121.35629, 1 = 97.85011
#Both data - without trans
both_caste <- ggplot(ant_data_both, aes(x = poly_id, y = PREavg_avg, fill = poly_id)) +
geom_violin(fill = "#A6CFFA", color = "black") +
labs(title = "", x = "", y = "Rainfall") +
theme_classic(base_size = 18) +
annotate("segment", x = 0.9, xend = 1.1, y = 121, yend = 121,
color = "black", size = 0.7) +
annotate("text", x = 1, y = 121, label = "121",
color = "black", vjust = -0.3, size = 5.5) +
annotate("segment", x = 1.9, xend = 2.1, y = 98, yend = 98,
color = "black", size = 0.7) +
annotate("text", x = 2, y = 98, label = "98",
color = "black", vjust = -0.3, size = 5.5) +
scale_y_continuous(labels = comma_format(), expand = c(0.15, 0)) +
scale_fill_manual(values = c("white", "white")) +
guides(fill = "none") +
scale_x_discrete(labels = c("Monomorphic", "Polymorphic")) +  # Set custom x-axis labels
theme(
axis.text.x = element_text(size = 19, colour = "black"),
axis.text.y = element_text(size = 19, colour = "black"),
axis.title.x = element_text(size = 19, colour = "black"),
axis.title.y = element_text(size = 19, colour = "black"),
plot.title = element_text(hjust = 0.5, size = 16)
) +
ggtitle("Both")
both_caste
ggsave("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Presentations/TEEB/2nd_TEEB_talk/Photos/both_caste_PRE.pdf", plot = both_caste, width = 6, height = 4, dpi = 300)
grid.arrange(global_CS, tropical_CS, temperate_CS, both_CS, global_caste, tropical_caste, temperate_caste, both_caste, ncol = 2, nrow = 4)
PRE_panel_reg.pdf <- grid.arrange(global_CS_reg, tropical_CS_reg, temperate_CS_reg, both_CS_reg, global_caste, tropical_caste, temperate_caste, both_caste, ncol = 2, nrow = 4)
PRE_panel_reg.pdf
ggsave("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Presentations/TEEB/2nd_TEEB_talk/Photos/PRE_panel_reg.pdf", plot = PRE_panel_reg.pdf, width = 9, height = 14, dpi = 300)
knitr::opts_chunk$set(echo = F, message=F, warning=F)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = T)
# Packages
library(data.table)
library(ape)
library(ggtree) ## Basic ggplot package for trees
library(ggtreeExtra) ## For fancy tree plotting
library(ufs) ## For ggqq plot
library(phylolm)
library(rr2)
library(ggplot2)
library(ggpubr)
theme_set(theme_minimal())
library(kableExtra)
library(stringr)
library(scales)
library(gridExtra)
library(grid)
library(phylolm)
# global plotting options for histogram
xmin= -7.5
xmax= 0
PartR2<-  c("No", "sqrt", "log (ln)")
table<- rbind(PartR2)
rownames(table)<- NULL
colnames(table)<- c("TMPavg", "PREavg", "DTRavg")
knitr::kable(table, "latex", align= c("c","c","c"), booktabs = T, caption= "Transformation of climatic variables.") %>%
kable_styling(latex_options = "HOLD_position")
ant_data_global <- read.csv("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Data/Ant_environment/Subsetted/Primary/Data/CS/New_transformations/AntClm_CSize_all_230710.csv") #After species with unusual biology removed = 474 species
ant_data_tropical <- read.csv("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Data/Ant_environment/Subsetted/Primary/Data/CS/Tropical_vs_temperate/tropical_ant_data.csv") #116 species
ant_data_temperate <- read.csv("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Data/Ant_environment/Subsetted/Primary/Data/CS/Tropical_vs_temperate/Temperate_ant_data_230804.csv") #190 species
ant_data_both <- read.csv("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Data/Ant_environment/Subsetted/Primary/Data/CS/Tropical_vs_temperate/Both_ant_data_230804.csv") #168
#Assign rownames as species names
rownames(ant_data_global) <- ant_data_global$valid_species_name
rownames(ant_data_tropical) <- ant_data_tropical$valid_species_name
rownames(ant_data_temperate) <- ant_data_temperate$valid_species_name
rownames(ant_data_both) <- ant_data_both$valid_species_name
#Read tree
# Read in the trees
tree_set<- read.tree("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Data/Ant_environment/Subsetted/Primary/Trees/CS/474_species/400_trees/400trees_pruned_CSize_230712.tre")
# anttree_NCuniform_stem <- read.tree(file = "/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Data/Ant_environment/Subsetted/Primary/Trees/CS/474_species/MCC_trees/pruned_474_sp_NCuniform_stem_MCC.tre")
#Global data
global_CS <- ggplot(ant_data_global, aes(x = PREavg_avg, y = colony.size.y)) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
labs(x = expression(sqrt("Precipitation")), y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +  # Center the title
scale_y_log10(breaks = c(1, 100, 10000, 1000000), labels = scales::comma_format(), expand = c(0, 1.5)) +
scale_x_sqrt(breaks = c(10, 100, 300, 600), labels = scales::comma_format(), expand = c(0.2, 0.5)) +
theme(legend.position = "none") +
ggtitle("Global")  # Add the title 'Global'
global_CS
###########
#Plot with regression line
#Run model
global_PRE_model_trans<- phylolm(log10(colony.size.y) ~ sqrt(PREavg_avg),
data=ant_data_global, phy=tree_set[[1]], model = "lambda")
summary(global_PRE_model_trans)
#Predict regression line
ant_data_global$predicted_colony_size <- predict(global_PRE_model_trans, newdata = ant_data_global)
global_CS_reg_trans <- ggplot(ant_data_global, aes(x = sqrt(PREavg_avg), y = log10(colony.size.y))) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
geom_line(aes(y = predicted_colony_size), color = "black", size = 0.8) +  # Add the regression line
labs(x = expression(sqrt("Precipitation")), y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +  # Center the title
scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8), labels = scales::comma_format(), expand = c(0, 0.5)) +
scale_x_continuous(breaks = c(1, 5, 10, 15, 20, 25), labels = scales::comma_format(), expand = c(0, 0.9)) +
theme(legend.position = "none") +
ggtitle("Global")  # Add the title 'Global'
global_CS_reg_trans
###########
#Plot with regression line but without transformations
#Run model
global_PRE_model<- phylolm(log10(colony.size.y) ~ PREavg_avg,
data=ant_data_global, phy=tree_set[[1]], model = "lambda")
summary(global_PRE_model)
#Predict regression line
ant_data_global$predicted_colony_size <- predict(global_PRE_model, newdata = ant_data_global)
global_CS_reg <- ggplot(ant_data_global, aes(x = PREavg_avg, y = log10(colony.size.y))) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
geom_line(aes(y = predicted_colony_size), color = "black", size = 0.8) +  # Add the regression line
labs(x = "Rainfall", y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +  # Center the title
scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8), labels = scales::comma_format(), expand = c(0, 0.5)) +
scale_x_continuous(labels = scales::comma_format(), expand = c(0, 15)) +
theme(legend.position = "none") +
ggtitle("Global")  # Add the title 'Global'
global_CS_reg
#Tropical data
tropical_CS <- ggplot(ant_data_tropical, aes(x = PREavg_avg, y = colony.size.y)) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
labs(x = expression(sqrt("Precipitation")), y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_y_log10(breaks = c(1, 100, 10000, 1000000), labels = comma_format(), expand = c(0, 1.5)) +
scale_x_sqrt(breaks = c(10, 100, 300, 600), labels = comma_format(), expand = c(0.2, 0.5)) +
theme(legend.position = "none") +
ggtitle("Tropical")
tropical_CS
###########
#Plot with regression line
#Run model
tropical_PRE_model<- phylolm(log10(colony.size.y) ~ sqrt(PREavg_avg),
data=ant_data_tropical, phy=tree_set[[1]], model = "lambda")
summary(tropical_PRE_model)
#Predict regression line
ant_data_tropical$predicted_colony_size <- predict(tropical_PRE_model, newdata = ant_data_tropical)
tropical_CS_reg <- ggplot(ant_data_tropical, aes(x = sqrt(PREavg_avg), y = log10(colony.size.y))) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
geom_line(aes(y = predicted_colony_size), color = "black", size = 0.8) +  # Add the regression line
labs(x = expression(sqrt("Precipitation")), y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8), labels = scales::comma_format(), expand = c(0, 0.5)) +
scale_x_continuous(breaks = c(1, 5, 10, 15, 20, 25), labels = scales::comma_format(), expand = c(0, 0.9)) +
theme(legend.position = "none") +
ggtitle("Tropical")
tropical_CS_reg
#Temperate data
temperate_CS <- ggplot(ant_data_temperate, aes(x = PREavg_avg, y = colony.size.y)) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
labs(x = expression(sqrt("Precipitation")), y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_y_log10(breaks = c(1, 100, 10000, 1000000), labels = comma_format(), expand = c(0, 1.5)) +
scale_x_sqrt(breaks = c(10, 50, 100, 150, 200), labels = comma_format(), expand = c(0.2, 0.5)) +
theme(legend.position = "none") +
ggtitle("Temperate")
temperate_CS
###########
#Plot with regression line
#Run model
temperate_PRE_model_trans<- phylolm(log10(colony.size.y) ~ sqrt(PREavg_avg),
data=ant_data_temperate, phy=tree_set[[1]], model = "lambda")
summary(temperate_PRE_model_trans)
#Predict regression line
ant_data_temperate$predicted_colony_size <- predict(temperate_PRE_model_trans, newdata = ant_data_temperate)
temperate_CS_reg_trans <- ggplot(ant_data_temperate, aes(x = sqrt(PREavg_avg), y = log10(colony.size.y))) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
geom_line(aes(y = predicted_colony_size), color = "black", size = 0.8) +  # Add the regression line
labs(x = expression(sqrt("Rainfall")), y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8), labels = scales::comma_format(), expand = c(0, 0.5)) +
scale_x_continuous(breaks = c(1, 5, 10, 15, 20, 25), labels = scales::comma_format(), expand = c(0, 0.9)) +
theme(legend.position = "none") +
ggtitle("Temperate")
temperate_CS_reg_trans
###########
#Plot with regression line
#Run model
temperate_PRE_model<- phylolm(log10(colony.size.y) ~ PREavg_avg,
data=ant_data_temperate, phy=tree_set[[1]], model = "lambda")
summary(temperate_PRE_model)
#Predict regression line
ant_data_temperate$predicted_colony_size <- predict(temperate_PRE_model, newdata = ant_data_temperate)
temperate_CS_reg <- ggplot(ant_data_temperate, aes(x = PREavg_avg, y = log10(colony.size.y))) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
geom_line(aes(y = predicted_colony_size), color = "black", size = 0.8) +  # Add the regression line
labs(x = "Rainfall", y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8), labels = scales::comma_format(), expand = c(0, 0.5)) +
scale_x_continuous(labels = scales::comma_format(), expand = c(0, 15)) +
theme(legend.position = "none") +
ggtitle("Temperate")
temperate_CS_reg
#Both
both_CS <- ggplot(ant_data_both, aes(x = PREavg_avg, y = colony.size.y)) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
labs(x = expression(sqrt("Precipitation")), y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_y_log10(breaks = c(1, 100, 10000, 1000000), labels = comma_format(), expand = c(0, 1.5)) +
scale_x_sqrt(breaks = c(20, 100, 200, 300), labels = comma_format(), expand = c(0.2, 0.5)) +
theme(legend.position = "none") +
ggtitle("Both")
both_CS
###########
#Plot with regression line
#Run model
both_PRE_model_trans<- phylolm(log10(colony.size.y) ~ sqrt(PREavg_avg),
data=ant_data_both, phy=tree_set[[1]], model = "lambda")
summary(both_PRE_model_trans)
#Predict regression line
ant_data_both$predicted_colony_size <- predict(both_PRE_model_trans, newdata = ant_data_both)
both_CS_reg_trans <- ggplot(ant_data_both, aes(x = sqrt(PREavg_avg), y = log10(colony.size.y))) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
geom_line(aes(y = predicted_colony_size), color = "black", size = 0.8) +  # Add the regression line
labs(x = expression(sqrt("Rainfall")), y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8), labels = scales::comma_format(), expand = c(0, 0.5)) +
scale_x_continuous(breaks = c(1, 5, 10, 15, 20, 25), labels = scales::comma_format(), expand = c(0, 0.9)) +
theme(legend.position = "none") +
ggtitle("Both")
both_CS_reg_trans
###########
#Plot with regression line
#Run model
both_PRE_model<- phylolm(log10(colony.size.y) ~ PREavg_avg,
data=ant_data_both, phy=tree_set[[1]], model = "lambda")
summary(both_PRE_model)
#Predict regression line
ant_data_both$predicted_colony_size <- predict(both_PRE_model, newdata = ant_data_both)
both_CS_reg <- ggplot(ant_data_both, aes(x = PREavg_avg, y = log10(colony.size.y))) +
geom_point(size = 1, alpha = 1, position = position_jitter(height = 0), colour = "#A6CFFA") +
geom_line(aes(y = predicted_colony_size), color = "black", size = 0.8) +  # Add the regression line
labs(x = "Precipitation", y = ~log[10]~"Colony size") +
theme_classic() +
theme(axis.title.x = element_text(colour = "black"),
axis.title.y = element_text(colour = "black"),
axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 14),
plot.margin = unit(c(1, 1, 1.5, 1), "lines"),
plot.title = element_text(hjust = 0.5, size = 16)) +
scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8), labels = scales::comma_format(), expand = c(0, 0.5)) +
scale_x_continuous(labels = scales::comma_format(), expand = c(0, 15)) +
theme(legend.position = "none") +
ggtitle("Both")
both_CS_reg
#Assign poly_id as a factor
ant_data_global$poly_id <- as.factor(ant_data_global$poly_id)
ant_data_tropical$poly_id <- as.factor(ant_data_tropical$poly_id)
ant_data_temperate$poly_id <- as.factor(ant_data_temperate$poly_id)
ant_data_both$poly_id <- as.factor(ant_data_both$poly_id)
#Calculate mean PRE for each factor level
global_means <- aggregate(PREavg_avg ~ poly_id, data = ant_data_global, FUN = mean) #0 = 121.4256, 1 = 107.5335
tropical_means <- aggregate(PREavg_avg ~ poly_id, data = ant_data_tropical, FUN = mean) #0 = 199.6338, 1 = 190.0934
temperate_means <- aggregate(PREavg_avg ~ poly_id, data = ant_data_temperate, FUN = mean) #0 = 72.81919, 1 = 69.71011
both_means <- aggregate(PREavg_avg ~ poly_id, data = ant_data_both, FUN = mean) #0 = 121.35629, 1 = 97.85011
#Global data - with trans
global_caste_trans <- ggplot(ant_data_global, aes(x = poly_id, y = PREavg_avg, fill = poly_id)) +
geom_violin(fill = "#A6CFFA", color = "black") +
labs(title = "", x = "", y = expression(sqrt("Rainfall"))) +
theme_classic(base_size = 13) +
annotate("segment", x = 0.9, xend = 1.1, y = 121, yend = 121,
color = "black", size = 0.7) +
annotate("text", x = 1, y = 121, label = "121",
color = "black", vjust = -0.3) +
annotate("segment", x = 1.9, xend = 2.1, y = 107, yend = 107,
color = "black", size = 0.7) +
annotate("text", x = 2, y = 107, label = "107",
color = "black", vjust = -0.3) +
scale_y_sqrt(labels = comma_format(), expand = c(0.15, 0), breaks = c(10, 100, 300, 600)) +
scale_fill_manual(values = c("white", "white")) +
guides(fill = "none") +
scale_x_discrete(labels = c("Monomorphic", "Polymorphic")) +  # Set custom x-axis labels
theme(
axis.text.x = element_text(size = 14, colour = "black"),
axis.text.y = element_text(size = 14, colour = "black"),
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(size = 14, colour = "black"),
plot.title = element_text(hjust = 0.5, size = 16)
) +
ggtitle("Global")
global_caste_trans
#######
#Global data - without trans
global_caste <- ggplot(ant_data_global, aes(x = poly_id, y = PREavg_avg, fill = poly_id)) +
geom_violin(fill = "#A6CFFA", color = "black") +
labs(title = "", x = "", y = "Rainfall") +
theme_classic(base_size = 13) +
annotate("segment", x = 0.9, xend = 1.1, y = 121, yend = 121,
color = "black", size = 0.7) +
annotate("text", x = 1, y = 121, label = "121",
color = "black", vjust = -0.3) +
annotate("segment", x = 1.9, xend = 2.1, y = 107, yend = 107,
color = "black", size = 0.7) +
annotate("text", x = 2, y = 107, label = "107",
color = "black", vjust = -0.3) +
scale_y_continuous(labels = comma_format(), expand = c(0.15, 0)) +
scale_fill_manual(values = c("white", "white")) +
guides(fill = "none") +
scale_x_discrete(labels = c("Monomorphic", "Polymorphic")) +  # Set custom x-axis labels
theme(
axis.text.x = element_text(size = 14, colour = "black"),
axis.text.y = element_text(size = 14, colour = "black"),
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(size = 14, colour = "black"),
plot.title = element_text(hjust = 0.5, size = 16)
) +
ggtitle("Global")
global_caste
#Tropical data
tropical_caste <- ggplot(ant_data_tropical, aes(x = poly_id, y = PREavg_avg, fill = poly_id)) +
geom_violin(fill = "#A6CFFA", color = "black") +
labs(title = "", x = "", y = expression(sqrt("Precipitation"))) +
theme_classic(base_size = 13) +
annotate("segment", x = 0.9, xend = 1.1, y = 200, yend = 200,
color = "black", size = 0.7) +
annotate("text", x = 1, y = 200, label = "200",
color = "black", vjust = -0.3) +
annotate("segment", x = 1.9, xend = 2.1, y = 190, yend = 190,
color = "black", size = 0.7) +
annotate("text", x = 2, y = 190, label = "190",
color = "black", vjust = -0.3) +
scale_y_sqrt(labels = comma_format(), expand = c(0.15, 0), breaks = c(10, 100, 300, 600)) +
scale_fill_manual(values = c("white", "white")) +
guides(fill = "none") +
scale_x_discrete(labels = c("Monomorphic", "Polymorphic")) +  # Set custom x-axis labels
theme(
axis.text.x = element_text(size = 14, colour = "black"),
axis.text.y = element_text(size = 14, colour = "black"),
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(size = 14, colour = "black"),
plot.title = element_text(hjust = 0.5, size = 16)
) +
ggtitle("Tropical")
tropical_caste
#Temperate data - with trans
temperate_caste_trans <- ggplot(ant_data_temperate, aes(x = poly_id, y = PREavg_avg, fill = poly_id)) +
geom_violin(fill = "#A6CFFA", color = "black") +
labs(title = "", x = "", y = expression(sqrt("Precipitation"))) +
theme_classic(base_size = 13) +
annotate("segment", x = 0.9, xend = 1.1, y = 73, yend = 73,
color = "black", size = 0.7) +
annotate("text", x = 1, y = 73, label = "73",
color = "black", vjust = -0.3) +
annotate("segment", x = 1.9, xend = 2.1, y = 70, yend = 70,
color = "black", size = 0.7) +
annotate("text", x = 2, y = 70, label = "70",
color = "black", vjust = -0.3) +
scale_y_sqrt(labels = comma_format(), expand = c(0.15, 0), breaks = c(10, 100, 300, 600)) +
scale_fill_manual(values = c("white", "white")) +
guides(fill = "none") +
scale_x_discrete(labels = c("Monomorphic", "Polymorphic")) +  # Set custom x-axis labels
theme(
axis.text.x = element_text(size = 14, colour = "black"),
axis.text.y = element_text(size = 14, colour = "black"),
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(size = 14, colour = "black"),
plot.title = element_text(hjust = 0.5, size = 16)
) +
ggtitle("Temperate")
temperate_caste_trans
########
#Temperate data - without trans
temperate_caste <- ggplot(ant_data_temperate, aes(x = poly_id, y = PREavg_avg, fill = poly_id)) +
geom_violin(fill = "#A6CFFA", color = "black") +
labs(title = "", x = "", y = "Rainfall") +
theme_classic(base_size = 13) +
annotate("segment", x = 0.9, xend = 1.1, y = 73, yend = 73,
color = "black", size = 0.7) +
annotate("text", x = 1, y = 73, label = "73",
color = "black", vjust = -0.3) +
annotate("segment", x = 1.9, xend = 2.1, y = 70, yend = 70,
color = "black", size = 0.7) +
annotate("text", x = 2, y = 70, label = "70",
color = "black", vjust = -0.3) +
scale_y_continuous(labels = comma_format(), expand = c(0.15, 0)) +
scale_fill_manual(values = c("white", "white")) +
guides(fill = "none") +
scale_x_discrete(labels = c("Monomorphic", "Polymorphic")) +  # Set custom x-axis labels
theme(
axis.text.x = element_text(size = 14, colour = "black"),
axis.text.y = element_text(size = 14, colour = "black"),
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(size = 14, colour = "black"),
plot.title = element_text(hjust = 0.5, size = 16)
) +
ggtitle("Temperate")
temperate_caste
#Both data - with trans
both_caste_trans <- ggplot(ant_data_both, aes(x = poly_id, y = PREavg_avg, fill = poly_id)) +
geom_violin(fill = "#A6CFFA", color = "black") +
labs(title = "", x = "", y = expression(sqrt("Rainfall"))) +
theme_classic(base_size = 13) +
annotate("segment", x = 0.9, xend = 1.1, y = 121, yend = 121,
color = "black", size = 0.7) +
annotate("text", x = 1, y = 121, label = "121",
color = "black", vjust = -0.3) +
annotate("segment", x = 1.9, xend = 2.1, y = 98, yend = 98,
color = "black", size = 0.7) +
annotate("text", x = 2, y = 98, label = "98",
color = "black", vjust = -0.3) +
scale_y_sqrt(labels = comma_format(), expand = c(0.15, 0), breaks = c(10, 100, 300, 600)) +
scale_fill_manual(values = c("white", "white")) +
guides(fill = "none") +
scale_x_discrete(labels = c("Monomorphic", "Polymorphic")) +  # Set custom x-axis labels
theme(
axis.text.x = element_text(size = 14, colour = "black"),
axis.text.y = element_text(size = 14, colour = "black"),
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(size = 14, colour = "black"),
plot.title = element_text(hjust = 0.5, size = 16)
) +
ggtitle("Both")
both_caste_trans
#########
both_means <- aggregate(PREavg_avg ~ poly_id, data = ant_data_both, FUN = mean) #0 = 121.35629, 1 = 97.85011
#Both data - without trans
both_caste <- ggplot(ant_data_both, aes(x = poly_id, y = PREavg_avg, fill = poly_id)) +
geom_violin(fill = "#A6CFFA", color = "black") +
labs(title = "", x = "", y = "Rainfall") +
theme_classic(base_size = 18) +
annotate("segment", x = 0.9, xend = 1.1, y = 121, yend = 121,
color = "black", size = 0.7) +
annotate("text", x = 1, y = 121, label = "121",
color = "black", vjust = -0.3, size = 5.5) +
annotate("segment", x = 1.9, xend = 2.1, y = 98, yend = 98,
color = "black", size = 0.7) +
annotate("text", x = 2, y = 98, label = "98",
color = "black", vjust = -0.3, size = 5.5) +
scale_y_continuous(labels = comma_format(), expand = c(0.15, 0)) +
scale_fill_manual(values = c("white", "white")) +
guides(fill = "none") +
scale_x_discrete(labels = c("Monomorphic", "Polymorphic")) +  # Set custom x-axis labels
theme(
axis.text.x = element_text(size = 19, colour = "black"),
axis.text.y = element_text(size = 19, colour = "black"),
axis.title.x = element_text(size = 19, colour = "black"),
axis.title.y = element_text(size = 19, colour = "black"),
plot.title = element_text(hjust = 0.5, size = 16)
) +
ggtitle("Both")
both_caste
ggsave("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Presentations/TEEB/2nd_TEEB_talk/Photos/both_caste_PRE.pdf", plot = both_caste, width = 6, height = 4, dpi = 300)
grid.arrange(global_CS, tropical_CS, temperate_CS, both_CS, global_caste, tropical_caste, temperate_caste, both_caste, ncol = 2, nrow = 4)
PRE_panel_reg.pdf <- grid.arrange(global_CS_reg, tropical_CS_reg, temperate_CS_reg, both_CS_reg, global_caste, tropical_caste, temperate_caste, both_caste, ncol = 2, nrow = 4)
PRE_panel_reg.pdf
ggsave("/Users/louis.bell-roberts/Documents/DTP_1st_project_rotation/Presentations/TEEB/2nd_TEEB_talk/Photos/PRE_panel_reg.pdf", plot = PRE_panel_reg.pdf, width = 9, height = 14, dpi = 300)
121-98
23/121
